library(tidyverse)
library(fs)
# Define the base path
base_path <- "../data/96ml"
# Find all text files matching the pattern '96ml##' in the directory structure
file_paths <- dir_ls(base_path, regexp = "96ml\\d+$")
file_paths
# Define the base path
base_path <- "../data/96ml"
# Find all files matching the pattern '96ml##' in subfolders
file_paths <- dir_ls(base_path, recurse = TRUE, regexp = "/96ml\\d+$")
# Read and combine all files into a single dataset
combined_data <- file_paths %>%
lapply(read_delim, delim = "\t", col_types = cols()) %>%
bind_rows()
# Print a preview of the combined dataset
print(combined_data)
colnames(d)
colnames(combined_data)
rm(list=ls())
library(tidyverse)
library(fs)
# -----------------------------------------------------------------------------
# Behavioural data
# Define the base path
base_path <- "../data/96ml"
# Find all files matching the pattern '96ml##' in subfolders
file_paths <- dir_ls(base_path, recurse = TRUE, regexp = "/96ml\\d+$")
# Read and combine all files into a single dataset
d <- file_paths %>%
lapply(read_delim, delim = "\t", col_types = cols()) %>%
bind_rows()
# Print a preview of the combined dataset
print(d)
# Optionally, save the combined dataset to a file
# write_csv(combined_data, "combined_data.csv")
colnames(d)
library(mlisi)
dag <- d %>%
group_by(dim_onset) %>%
mutate(accuracy=mean(acc, na.rm=TRUE),
accuracy_se = binomSEM(acc),
confidence = mean(conf_rating, na.rm=TRUE),
confidence_se = bootMeanSE(conf_rating)) %>%
pivot_longer(
cols = -dim_onset,
names_to = c("measure", "type"), # Separate column name into two parts
names_sep = "_", # Split column names at '_'
values_to = "value"
) %>%
pivot_wider(
names_from = type, # Pivot 'type' back into separate columns
values_from = value
)
d %>%
group_by(dim_onset) %>%
mutate(accuracy=mean(acc, na.rm=TRUE),
accuracy_se = binomSEM(acc),
confidence = mean(conf_rating, na.rm=TRUE),
confidence_se = bootMeanSE(conf_rating))
dag <- d %>%
group_by(dim_onset) %>%
summarise(accuracy=mean(acc, na.rm=TRUE),
accuracy_se = binomSEM(acc),
confidence = mean(conf_rating, na.rm=TRUE),
confidence_se = bootMeanSE(conf_rating)) %>%
pivot_longer(
cols = -dim_onset,
names_to = c("measure", "type"), # Separate column name into two parts
names_sep = "_", # Split column names at '_'
values_to = "value"
) %>%
pivot_wider(
names_from = type, # Pivot 'type' back into separate columns
values_from = value
)
d %>%
group_by(dim_onset) %>%
summarise(accuracy=mean(acc, na.rm=TRUE),
accuracy_se = binomSEM(acc),
confidence = mean(conf_rating, na.rm=TRUE),
confidence_se = bootMeanSE(conf_rating))
binomSEM
binomSEM <- function (v){
n <- sum(!is.na(v))
sqrt((mean(v, na.rm=TRUE) * (1 - mean(v, na.rm=TRUE)))/n)
}
d %>%
group_by(dim_onset) %>%
summarise(accuracy=mean(acc, na.rm=TRUE),
accuracy_se = binomSEM(acc),
confidence = mean(conf_rating, na.rm=TRUE),
confidence_se = bootMeanSE(conf_rating))
dag <- d %>%
group_by(dim_onset) %>%
summarise(accuracy=mean(acc, na.rm=TRUE),
accuracy_se = binomSEM(acc),
confidence = mean(conf_rating, na.rm=TRUE),
confidence_se = bootMeanSE(conf_rating)) %>%
pivot_longer(
cols = -dim_onset,
names_to = c("measure", "type"), # Separate column name into two parts
names_sep = "_", # Split column names at '_'
values_to = "value"
) %>%
pivot_wider(
names_from = type, # Pivot 'type' back into separate columns
values_from = value
)
d %>%
group_by(dim_onset) %>%
summarise(accuracy=mean(acc, na.rm=TRUE),
accuracy_se = binomSEM(acc),
confidence = mean(conf_rating, na.rm=TRUE),
confidence_se = bootMeanSE(conf_rating))
dag <- d %>%
group_by(dim_onset) %>%
summarise(accuracy_value=mean(acc, na.rm=TRUE),
accuracy_se = binomSEM(acc),
confidence_value = mean(conf_rating, na.rm=TRUE),
confidence_se = bootMeanSE(conf_rating)) %>%
pivot_longer(
cols = -dim_onset,
names_to = c("measure", "type"), # Separate column name into two parts
names_sep = "_", # Split column names at '_'
values_to = "value"
) %>%
pivot_wider(
names_from = type, # Pivot 'type' back into separate columns
values_from = value
)
dag
dag %>%
ggplot(aes(x=dim_onset,
y=value,
ymim=value-se,
ymax=value+se,
color=measure))+
geom_point(width=0)+
geom_line()
dag %>%
ggplot(aes(x=dim_onset,
y=value,
ymim=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0))+
dag %>%
ggplot(aes(x=dim_onset,
y=value,
ymim=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()
dag %>%
ggplot(aes(x=dim_onset,
y=value,
ymim=value-se,
ymax=value+se,
color=measure))+
geom_point()
dag %>%
ggplot(aes(x=dim_onset,
y=value,
ymim=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)
dag
dag %>%
ggplot(aes(x=dim_onset,
y=value,
ymim=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(aes(ymim=value-se,
ymax=value+se),
width=0)+
geom_line()
dag %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()
dag
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", measure+0.2, measure-0.2))+
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", measure+0.2, measure-0.2)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.2, dim_onset-0.2)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()+
coord_cartesian(xlim=c(0,10), ylim=c(1/3, 1))
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()+
coord_cartesian(xlim=c(0,10), ylim=c(1/3, 1))+
geom_hline(yintercept=1/3, lty=2)
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()+
coord_cartesian(xlim=c(0,10), ylim=c(1/3, 1))+
geom_hline(yintercept=1/3, lty=2)+
theme_minimal()
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()+
coord_cartesian(xlim=c(0,10), ylim=c(1/3, 1))+
geom_hline(yintercept=1/3, lty=2)+
theme_minimal()+
labs(x="lead time (seconds)", y="")
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()+
coord_cartesian(xlim=c(0,10), ylim=c(1/3, 1))+
geom_hline(yintercept=1/3, lty=2)+
theme_light()+
labs(x="lead time (seconds)", y="")
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()+
coord_cartesian(xlim=c(0,10), ylim=c(1/3, 1))+
geom_hline(yintercept=1/3, lty=2)+
theme_linedraw()+
labs(x="lead time (seconds)", y="")
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()+
coord_cartesian(xlim=c(0,10), ylim=c(1/3, 1))+
geom_hline(yintercept=1/3, lty=2)+
theme_bw()+
labs(x="lead time (seconds)", y="")
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()+
coord_cartesian(xlim=c(0,10), ylim=c(1/3, 1))+
geom_hline(yintercept=1/3, lty=2)+
theme_light()+
labs(x="lead time (seconds)", y="")
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()+
coord_cartesian(xlim=c(0,10), ylim=c(1/3, 1))+
geom_hline(yintercept=1/3, lty=2)+
theme_classic()+
labs(x="lead time (seconds)", y="")
# Define the base path
gaze_path <- "../gazedata"
# Find all files matching the pattern '96ml##_gaze'
file_paths <- dir_ls(gaze_path, recurse = TRUE, regexp = "96ml\\d{2}_gaze$")
# Print the matching file paths
print(file_paths)
# Read and combine all files into a single dataset
gaze_d <- file_paths %>%
lapply(read_delim, delim = "\t", col_types = cols()) %>%
bind_rows()
str(d)
str(gaze_d)
file_paths
file_paths[1]
gaze_d <- read_delim(file_paths[1])
str(gaze_d)
str(d)
rm(list=ls())
library(tidyverse)
library(fs)
library(mlisi)
# -----------------------------------------------------------------------------
# Behavioural data
# Define the base path
base_path <- "../data/96ml"
# Find all files matching the pattern '96ml##' in subfolders
file_paths <- dir_ls(base_path, recurse = TRUE, regexp = "/96ml\\d+$")
# Read and combine all files into a single dataset
d <- file_paths %>%
lapply(read_delim, delim = "\t", col_types = cols()) %>%
bind_rows()
# Print a preview of the combined dataset
print(d)
# save the combined dataset to a file
# write_csv(d, "combined_data.csv")
colnames(d)
binomSEM <- function (v){
n <- sum(!is.na(v))
sqrt((mean(v, na.rm=TRUE) * (1 - mean(v, na.rm=TRUE)))/n)
}
dag <- d %>%
group_by(dim_onset) %>%
summarise(accuracy_value=mean(acc, na.rm=TRUE),
accuracy_se = binomSEM(acc),
confidence_value = mean(conf_rating, na.rm=TRUE),
confidence_se = bootMeanSE(conf_rating)) %>%
pivot_longer(
cols = -dim_onset,
names_to = c("measure", "type"), # Separate column name into two parts
names_sep = "_", # Split column names at '_'
values_to = "value"
) %>%
pivot_wider(
names_from = type, # Pivot 'type' back into separate columns
values_from = value
)
# plot
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()+
coord_cartesian(xlim=c(0,10), ylim=c(1/3, 1))+
geom_hline(yintercept=1/3, lty=2)+
theme_classic()+
labs(x="lead time (seconds)", y="")
# Define the base path
gaze_path <- "../gazedata"
# Find all files matching the pattern '96ml##_gaze'
file_paths <- dir_ls(gaze_path, recurse = TRUE, regexp = "96ml\\d{2}_gaze$")
# Print the matching file paths
print(file_paths)
gaze_d <- read_delim(file_paths[5])
str(gaze_d)
rm(list=ls())
library(tidyverse)
library(fs)
library(mlisi)
# -----------------------------------------------------------------------------
# Behavioural data
# Define the base path
base_path <- "../data/96ml"
# Find all files matching the pattern '96ml##' in subfolders
file_paths <- dir_ls(base_path, recurse = TRUE, regexp = "/96ml\\d+$")
# Read and combine all files into a single dataset
d <- file_paths %>%
lapply(read_delim, delim = "\t", col_types = cols()) %>%
bind_rows()
# Print a preview of the combined dataset
print(d)
# save the combined dataset to a file
# write_csv(d, "combined_data.csv")
colnames(d)
binomSEM <- function (v){
n <- sum(!is.na(v))
sqrt((mean(v, na.rm=TRUE) * (1 - mean(v, na.rm=TRUE)))/n)
}
dag <- d %>%
group_by(dim_onset) %>%
summarise(accuracy_value=mean(acc, na.rm=TRUE),
accuracy_se = binomSEM(acc),
confidence_value = mean(conf_rating, na.rm=TRUE),
confidence_se = bootMeanSE(conf_rating)) %>%
pivot_longer(
cols = -dim_onset,
names_to = c("measure", "type"), # Separate column name into two parts
names_sep = "_", # Split column names at '_'
values_to = "value"
) %>%
pivot_wider(
names_from = type, # Pivot 'type' back into separate columns
values_from = value
)
# plot
dag %>%
mutate(dim_onset=ifelse(measure=="accuracy", dim_onset+0.125, dim_onset-0.125)) %>%
ggplot(aes(x=dim_onset,
y=value,
ymin=value-se,
ymax=value+se,
color=measure))+
geom_point()+
geom_errorbar(width=0)+
geom_line()+
coord_cartesian(xlim=c(0,10), ylim=c(1/3, 1))+
geom_hline(yintercept=1/3, lty=2)+
theme_classic()+
labs(x="lead time (seconds)", y="")
